WITH 
  weeks AS (
    SELECT
      chain_name,
      DATE_SUB(CURRENT_DATE(), INTERVAL EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) + (CASE WHEN DATE_DIFF(CURRENT_DATE(), date, WEEK) = 1 THEN 7 ELSE 14 END) - 2 DAY) AS week_start_date,
      DATE_SUB(CURRENT_DATE(), INTERVAL EXTRACT(DAYOFWEEK FROM CURRENT_DATE()) + (CASE WHEN DATE_DIFF(CURRENT_DATE(), date, WEEK) = 1 THEN 1 ELSE 8 END) - 2 DAY) AS week_end_date,
      SUM(total_uploaded_stock) AS total_stock,
      CASE
        WHEN DATE_DIFF(CURRENT_DATE(), date, WEEK) = 1 THEN 'last_week'
        WHEN DATE_DIFF(CURRENT_DATE(), date, WEEK) = 2 THEN 'week_before_last'
        ELSE NULL
      END AS week_category
    FROM
      `munchdev-prod.output_dataform_generated_tables.analytics_supply`
    WHERE
      date >= DATE_SUB(CURRENT_DATE(), INTERVAL 14 DAY)
      AND EXTRACT(DAYOFWEEK FROM date) BETWEEN 2 AND 7 -- Filter weeks starting on Monday
      AND company_category = 'key_account'
      AND country = 'Hungary'
    GROUP BY
      chain_name,
      week_start_date,
      week_end_date,
      week_category
  ),
  comparison AS (
    SELECT
      lw.chain_name,
      lw.total_stock AS last_week_stock,
      wb.total_stock AS week_before_last_stock,
      lw.total_stock - wb.total_stock AS nominal_change,
      ROUND((lw.total_stock - wb.total_stock) / NULLIF(wb.total_stock, 0) * 100, 2) AS percentage_change,
      CONCAT(CAST(lw.week_start_date AS STRING), ' to ', CAST(lw.week_end_date AS STRING)) AS last_week_period,
      CONCAT(CAST(wb.week_start_date AS STRING), ' to ', CAST(wb.week_end_date AS STRING)) AS week_before_last_period
    FROM
      weeks lw
      LEFT JOIN weeks wb
      ON lw.chain_name = wb.chain_name
      AND lw.week_category = 'last_week'
      AND wb.week_category = 'week_before_last'
  )
SELECT
  chain_name,
  last_week_period AS last_week,
  week_before_last_period AS week_before_last,
  last_week_stock,
  week_before_last_stock,
  nominal_change,
  percentage_change
FROM
  comparison
WHERE
  nominal_change IS NOT NULL
ORDER BY
  nominal_change ASC
LIMIT
  10;
