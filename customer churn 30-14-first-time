WITH customer_data AS (
  SELECT 
    country,
    city,
    product_name,
    vendor_name,
    vendor_id,
    company_category,
    customer_id,
    order_id,
    purchase_date,
    ROW_NUMBER() OVER(PARTITION BY customer_id ORDER BY purchase_date ASC) AS customer_first_order,
    COUNT(order_id) OVER(PARTITION BY customer_id, product_name) AS customer_order_count
  FROM 
    `munchdev-prod.intermediate_dataform_generated_tables.stg_aggregation_seller_order`
  WHERE 
    purchase_date BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 90 DAY) AND CURRENT_DATE()
    AND country = 'Hungary'
),

all_time_first_purchases AS (
  SELECT 
    customer_id,
    MIN(purchase_date) AS first_purchase_date
  FROM 
    `munchdev-prod.intermediate_dataform_generated_tables.stg_aggregation_seller_order`
  GROUP BY 
    customer_id
),

first_time_customers AS (
  SELECT 
    cd.product_name,
    COUNT(DISTINCT cd.customer_id) AS first_time_customers
  FROM 
    customer_data cd
  JOIN all_time_first_purchases atf 
    ON cd.customer_id = atf.customer_id
    AND cd.purchase_date = atf.first_purchase_date
  GROUP BY 
    cd.product_name
),

repeat_customers AS (
  SELECT 
    product_name,
    COUNT(DISTINCT customer_id) AS repeat_customers,
    COUNT(DISTINCT order_id) AS total_orders_repeat_customers
  FROM 
    customer_data
  WHERE 
    customer_order_count >= 2
  GROUP BY product_name
),

last_purchases_all_products AS (
  SELECT 
    customer_id,
    MAX(purchase_date) AS last_purchase_date
  FROM 
    `munchdev-prod.intermediate_dataform_generated_tables.stg_aggregation_seller_order`
  GROUP BY 
    customer_id
),

total_last_purchase_customers_30_days AS (
  SELECT 
    cd.product_name,
    COUNT(DISTINCT cd.customer_id) AS total_last_purchase_customers_30
  FROM 
    customer_data cd
  JOIN last_purchases_all_products lp
    ON cd.customer_id = lp.customer_id
    AND cd.purchase_date = lp.last_purchase_date
  WHERE 
    lp.last_purchase_date < DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY)
  GROUP BY 
    cd.product_name
),

total_last_purchase_customers_14_days AS (
  SELECT 
    cd.product_name,
    COUNT(DISTINCT cd.customer_id) AS total_last_purchase_customers_14
  FROM 
    customer_data cd
  JOIN last_purchases_all_products lp
    ON cd.customer_id = lp.customer_id
    AND cd.purchase_date = lp.last_purchase_date
  WHERE 
    lp.last_purchase_date < DATE_SUB(CURRENT_DATE(), INTERVAL 14 DAY)
  GROUP BY 
    cd.product_name
),

first_time_last_purchase_30_days AS (
  SELECT 
    cd.product_name,
    COUNT(DISTINCT cd.customer_id) AS first_time_last_purchase_30_days
  FROM 
    customer_data cd
  JOIN all_time_first_purchases atf 
    ON cd.customer_id = atf.customer_id
    AND cd.purchase_date = atf.first_purchase_date
  JOIN last_purchases_all_products lp
    ON cd.customer_id = lp.customer_id
    AND cd.purchase_date = lp.last_purchase_date
  WHERE 
    lp.last_purchase_date < DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY)
  GROUP BY 
    cd.product_name
)

SELECT 
  customer_data.country,
  customer_data.city,
  customer_data.product_name,
  customer_data.vendor_name,
  customer_data.vendor_id,
  customer_data.company_category,

  COUNT(DISTINCT customer_data.customer_id) AS total_customers,

  ftc.first_time_customers,

  rc.repeat_customers,

  ROUND(SAFE_DIVIDE(rc.total_orders_repeat_customers, NULLIF(rc.repeat_customers, 0))) AS avg_orders_repeat_customers,

  ROUND(SAFE_DIVIDE(rc.repeat_customers, NULLIF(COUNT(DISTINCT customer_data.customer_id), 0)) * 100, 2) AS repeat_customer_ratio,

  tlp_30.total_last_purchase_customers_30,

  ROUND(SAFE_DIVIDE(tlp_30.total_last_purchase_customers_30, NULLIF(COUNT(DISTINCT customer_data.customer_id), 0)) * 100, 2) AS churn_rate_30_days,

  ROUND(SAFE_DIVIDE(tlp_30.total_last_purchase_customers_30, NULLIF(SUM(tlp_30.total_last_purchase_customers_30) OVER (), 0)) 
       * SAFE_DIVIDE(tlp_30.total_last_purchase_customers_30, NULLIF(COUNT(DISTINCT customer_data.customer_id), 0)) * 100, 6) 
  AS total_customer_loss_weighted_churn_rate_30_days,

  tlp_14.total_last_purchase_customers_14,

  ROUND(SAFE_DIVIDE(tlp_14.total_last_purchase_customers_14, NULLIF(COUNT(DISTINCT customer_data.customer_id), 0)) * 100, 2) AS churn_rate_14_days,

  ROUND(SAFE_DIVIDE(tlp_14.total_last_purchase_customers_14, NULLIF(SUM(tlp_14.total_last_purchase_customers_14) OVER (), 0)) 
       * SAFE_DIVIDE(tlp_14.total_last_purchase_customers_14, NULLIF(COUNT(DISTINCT customer_data.customer_id), 0)) * 100, 6) 
  AS total_customer_loss_weighted_churn_rate_14_days,

  ft_30.first_time_last_purchase_30_days,

  ROUND(SAFE_DIVIDE(ft_30.first_time_last_purchase_30_days, NULLIF(ftc.first_time_customers, 0)) * 100, 2) AS churn_rate_first_time_customers,

  ROUND(SAFE_DIVIDE(ft_30.first_time_last_purchase_30_days, NULLIF(SUM(ft_30.first_time_last_purchase_30_days) OVER (), 0)) 
       * SAFE_DIVIDE(ft_30.first_time_last_purchase_30_days, NULLIF(ftc.first_time_customers, 0)) * 100, 6) 
  AS total_customer_loss_weighted_churn_rate_first_time_customers

FROM 
  customer_data
LEFT JOIN 
  first_time_customers ftc ON customer_data.product_name = ftc.product_name
LEFT JOIN 
  repeat_customers rc ON customer_data.product_name = rc.product_name
LEFT JOIN 
  total_last_purchase_customers_30_days tlp_30 ON customer_data.product_name = tlp_30.product_name
LEFT JOIN 
  total_last_purchase_customers_14_days tlp_14 ON customer_data.product_name = tlp_14.product_name
LEFT JOIN 
  first_time_last_purchase_30_days ft_30 ON customer_data.product_name = ft_30.product_name

GROUP BY 
  customer_data.country, 
  customer_data.city,
  customer_data.product_name, 
  customer_data.vendor_name, 
  customer_data.vendor_id,
  customer_data.company_category,
  ftc.first_time_customers, 
  rc.repeat_customers, 
  rc.total_orders_repeat_customers, 
  tlp_30.total_last_purchase_customers_30,
  tlp_14.total_last_purchase_customers_14,
  ft_30.first_time_last_purchase_30_days;
